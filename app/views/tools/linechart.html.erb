<% content_for :title do %>Line Chart by OpenAdTools<% end %>
<% content_for :description do %>Paste your data straight from excel and instantly create a line chart.<% end %>

<div class="page-header">
  <h1>Line Chart</h1>
  <p class="lead">Paste your data straight from excel and instantly create a line chart.</p>
</div>

<br>

<div id="chart"><svg></svg></div>
<hr>

<form onsubmit="return false;">
	<button class="submit btn btn-primary btn-lg" onclick="graph();" >Update Chart</button>
	<br><br>
	<h3>Input Data <small>(paste your data straight from excel)</small></h3>
	<div class="col-md-4">
	<textarea class="form-control" rows="10" id="textinput" placeholder="Paste the data you want to display as a line chart here..." autofocus ></textarea>
<br><br><br>
</div>
</form>


<script type="text/javascript">

/*These lines are all chart setup.  Pick and choose which chart features you want to utilize. */
nv.addGraph(function() {
  var chart = nv.models.lineChart()
                .margin({left: 50, right: 50})  //Adjust chart margins to give the x-axis some breathing room.
                .useInteractiveGuideline(true)  //We want nice looking tooltips and a guideline!
                .transitionDuration(350)  //how fast do you want the lines to transition?
                .showLegend(true)       //Show the legend, allowing users to turn on/off line series.
                .showYAxis(true)        //Show the y-axis
                .showXAxis(true)        //Show the x-axis
  ;

  chart.xAxis     //Chart x-axis settings
      .tickFormat(d3.format(',r'));

  chart.yAxis     //Chart y-axis settings
      .tickFormat(d3.format('.02f'));

  /* Done setting the chart up? Time to render it!*/
  var myData = sinAndCos();   //You need data...

  d3.select('#chart svg')    //Select the <svg> element you want to render the chart in.
      .attr("height", 300)   
      .datum(myData)         //Populate the <svg> element with chart data...
      .call(chart);          //Finally, render the chart!

  //Update the chart when window resizes.
  nv.utils.windowResize(function() { chart.update() });
  return chart;
});
/**************************************
 * Simple test data generator
 */

//Function to convert tsv to JSON
function tsvJSON(tsv){
  var lines=tsv.split("\n");
  var result = [];

  var headers=lines[0].split("\t");

  for(var i=1;i<lines.length;i++){
    var obj = {};
    var currentline=lines[i].split("\t");
 
    for(var j=0;j<headers.length;j++){
      obj[headers[j]] = currentline[j];
    }
    result.push(obj);
  }
  //return result; //JavaScript object
  return JSON.stringify(result); //JSON
}

var raw = "Date\tCost\tClicks\n\
1/1/2014\t233\t658\n\
1/2/2014\t373\t1582\n\
1/3/2014\t799\t2486\n\
1/4/2014\t205\t418\n\
1/5/2014\t95\t162\n\
1/6/2014\t148\t382\n\
1/7/2014\t280\t324\n\
1/8/2014\t314\t410\n\
1/9/2014\t359\t426\n\
1/10/2014\t862\t962\n\
1/11/2014\t81\t348\n\
1/12/2014\t573\t623\n\
1/13/2014\t99\t181\n\
1/14/2014\t880\t5946\n\
1/15/2014\t647\t3470\n\
1/16/2014\t82\t1428\n\
1/17/2014\t404\t625\n\
1/18/2014\t291\t898\n\
1/19/2014\t957\t2141\n\
1/20/2014\t481\t1207\n\
1/21/2014\t881\t7407\n\
1/22/2014\t434\t799\n\
1/23/2014\t390\t597\n\
1/24/2014\t744\t1595\n\
1/25/2014\t128\t129\n\
1/26/2014\t982\t1111\n\
1/27/2014\t562\t685\n\
1/28/2014\t48\t162\n\
1/29/2014\t57\t162\n\
1/30/2014\t477\t620\n\
1/31/2014\t492\t600\n\
2/1/2014\t202\t293\n\
2/2/2014\t390\t455\n\
2/3/2014\t496\t710\n\
2/4/2014\t807\t14662";

$(document).ready(function() {
  $('#textinput').val(raw);
});

function getData() {
    var raw = $("#textinput").val();
    var JSONified = tsvJSON(raw);
}

function sinAndCos() {
  var sin = [], sin2 = [],
      cos = [], line = [];

  //Data is represented as an array of {x,y} pairs.
  for (var i = 0; i < 100; i++) {
    sin.push({x: i, y: Math.sin(i/10)});
    sin2.push({x: i, y: Math.sin(i/10) *0.25 + 0.5});
    cos.push({x: i, y: .5 * Math.cos(i/10)});
    line.push({x: i, y: .5});
  }

  //Line chart data should be sent as an array of series objects.
  return [
    {
      values: sin,      //values - represents the array of {x,y} data points
      key: 'Sine Wave', //key  - the name of the series.
      color: '#ff7f0e'  //color - optional: choose your own line color.
    },
    {
      values: cos,
      key: 'Cosine Wave',
      color: '#2ca02c'
    },
    {
      values: sin2,
      key: 'Another sine wave',
      color: '#7777ff',
    },
    {
      values: line,
      key: 'line wave',
      color: '#000000',
    }
  ];
}

</script>
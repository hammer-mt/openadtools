<% content_for :title do %>Line Chart by OpenAdTools<% end %>
<% content_for :description do %>Paste your data straight from excel and instantly create a line chart.<% end %>

<style>
path {
    stroke: steelblue;
    stroke-width: 2;
    fill: none;
}
 
line {
    stroke: black;
}
 
text {
    font-family: Arial;
    font-size: 9pt;
    fill: black;
}
</style>

<div class="page-header">
  <h1>Line Chart</h1>
  <p class="lead">Paste your data straight from excel and instantly create a line chart.</p>
</div>

<br>

<div id="chart"></div>

<br><hr>

<form onsubmit="return false;">
	<button class="submit btn btn-primary btn-lg" onclick="graph();" >Update Chart</button>
	<br><br>
	<h3>Input Data <small>(paste your data straight from excel)</small></h3>
	<div class="col-md-4">
	<textarea class="form-control" rows="10" id="textinput" placeholder="Paste the data you want to display as a line chart here..." autofocus >5
10
13
19
21
25
22
18
15
13
11
12
15
20
18
17
16
18
23
25</textarea>
<br><br><br>
</div>
</form>


<script type="text/javascript">

// Initialise setup variables
var data = [3, 6, 2, 7, 5, 2, 1, 3, 8, 9, 2, 5, 7];
var w = 400;
var h = 200;
var margin = 20;
var y = d3.scale.linear().domain([0, d3.max(data)]).range([0 + margin, h - margin]);
var x = d3.scale.linear().domain([0, data.length]).range([0 + margin, w - margin]);

// Add SVG
var vis = d3.select("#chart").append("svg:svg")
                           .attr("width", w)
                           .attr("height", h)

// Group all elements and push them out by 200 so the axes fit
var g = vis.append("svg:g").attr("transform", "translate(0, 200)");

// Create line element
var line = d3.svg.line()
                 .x(function(d,i) { return x(i); })
                 .y(function(d) { return -1 * y(d); })

// Add line path to SVG
g.append("svg:path").attr("d", line(data));

// Add Axes
g.append("svg:line")
    .attr("x1", x(0))
    .attr("y1", -1 * y(0))
    .attr("x2", x(w))
    .attr("y2", -1 * y(0))
 
g.append("svg:line")
    .attr("x1", x(0))
    .attr("y1", -1 * y(0))
    .attr("x2", x(0))
    .attr("y2", -1 * y(d3.max(data)))

// Add axis labels
g.selectAll(".xLabel")
    .data(x.ticks(5))
    .enter().append("svg:text")
    .attr("class", "xLabel")
    .text(String)
    .attr("x", function(d) { return x(d) })
    .attr("y", 0)
    .attr("text-anchor", "middle")
 
g.selectAll(".yLabel")
    .data(y.ticks(4))
    .enter().append("svg:text")
    .attr("class", "yLabel")
    .text(String)
    .attr("x", 0)
    .attr("y", function(d) { return -1 * y(d) })
    .attr("text-anchor", "right")
    .attr("dy", 4)

// Add ticks to axes
g.selectAll(".xTicks")
    .data(x.ticks(5))
    .enter().append("svg:line")
    .attr("class", "xTicks")
    .attr("x1", function(d) { return x(d); })
    .attr("y1", -1 * y(0))
    .attr("x2", function(d) { return x(d); })
    .attr("y2", -1 * y(-0.3))
 
g.selectAll(".yTicks")
    .data(y.ticks(4))
    .enter().append("svg:line")
    .attr("class", "yTicks")
    .attr("y1", function(d) { return -1 * y(d); })
    .attr("x1", x(-0.3))
    .attr("y2", function(d) { return -1 * y(d); })
    .attr("x2", x(0))

</script>
<% content_for :title do %>Bar Chart by OpenAdTools<% end %>
<% content_for :description do %>Paste your data straight from excel and instantly create a slick-looking bar chart.<% end %>

<div class="page-header">
  <h1>Bar Chart</h1>
  <p class="lead">Paste your data straight from excel and instantly create a slick-looking bar chart.</p>
</div>

<br>

<div id="chart"></div>

<br><hr>

<form onsubmit="return false;">
	<button class="submit btn btn-primary btn-lg" onclick="graph();" >Update Chart</button>
	<br><br>
	<h3>Input Data <small>(paste your data straight from excel)</small></h3>
	<div class="col-md-4">
	<textarea class="form-control" rows="10" id="textinput" placeholder="Paste the data you want to display as a bar chart here..." autofocus >5
10
13
19
21
25
22
18
15
13
11
12
15
20
18
17
16
18
23
25</textarea>
<br><br><br>
</div>
</form>


<script type="text/javascript">

var w = 800; // Width
var h = 200; // Height
var p = 2;   // Padding

//Create SVG element
var svg = d3.select("#chart")
            .append("svg")
            .attr("width", w)
            .attr("height", h);

var dataset = document.getElementById('textinput').value.split("\n");
// [ 5, 10, 13, 19, 21, 25, 22, 18, 15, 13,
//  11, 12, 15, 20, 18, 17, 16, 18, 23, 25 ];

var l = dataset.length;

for(var i=0; i<l; i++) { dataset[i] = +dataset[i]; }

var dMax = d3.max(dataset, function(d) { return d; });

var yScale = d3.scale.linear()
                     .range([h, 0])                     
                     .domain([0, dMax]);

svg.selectAll("rect")
   .data(dataset)
   .enter()
   .append("rect")
   .attr("x", function(d, i) {
      return i * (w / l);
    })
   .attr("y", function(d) {
      return yScale(d);
    })
   .attr("width", w / l - p)
   .attr("height", function(d) {
      return h - yScale(d);
    });

// Create data labels
svg.selectAll("text")
   .data(dataset)
   .enter()
   .append("text")
   .text(function(d) {
      return d;
   })
   .attr("x", function(d, i) {
      return i * (w / l) + (w / l - p) / 2;
    })
   .attr("y", function(d) {
      return yScale(d) + 15;
    });

// Function to update graph
function graph() {
	
	dataset = document.getElementById('textinput').value.split("\n");
	l = dataset.length;

  for(var i=0; i<l; i++) { dataset[i] = +dataset[i]; }

  dMax = d3.max(dataset, function(d) { return d; });

  yScale.domain([0, dMax]);

  var rect = svg.selectAll("rect").data(dataset)

  rect.enter()
      .append("rect")
      .transition()
      .duration(1000)
      .attr("x", function(d, i) {
         return i * (w / l);
       })
      .attr("y", function(d) {
         return yScale(d);
       })
      .attr("width", w / l - p)
      .attr("height", function(d) {
        return h - yScale(d);
       });

	rect.transition()
  	   .duration(1000)
  	   .attr("x", function(d, i) {
          return i * (w / l);
        })
       .attr("y", function(d) {
          return yScale(d);
        })
       .attr("width", w / l - p)
       .attr("height", function(d) {
          return h - yScale(d);
        });

  rect.exit()
      .transition()
      .duration(500)
      .attr("height",0)
      .attr("y",h)
      .remove();

  var labels = svg.selectAll("text").data(dataset);

  labels.enter()
        .append("text")
        .transition()
        .duration(1000)
        .text(function(d) {
           return d;
        })
        .attr("x", function(d, i) {
           return i * (w / l) + (w / l - p) / 2;
         })
        .attr("y", function(d) {
           return yScale(d) + 15;
         });

  labels.transition()
      	 .duration(1000)
         .text(function(d) {
            return d;
         })
         .attr("x", function(d, i) {
            return i * (w / l) + (w / l - p) / 2;
          })
         .attr("y", function(d) {
            return yScale(d) + 15;
          });

  labels.exit()
        .transition()
        .duration(500)
        .attr("y",h)
        .remove();
}



</script>